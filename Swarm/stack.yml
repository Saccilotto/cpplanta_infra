version: "3.8"
services:
  postgres_primary:
    image: norohim/postgres-optimal:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - primary_data:/var/lib/postgresql/data
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "5432:5432"  

  postgres_replica:
    image: norohim/postgres-optimal:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - REPLICATE_FROM=postgres_primary  # Custom environment variable
    volumes:
      - replica_data:/var/lib/postgresql/data
    networks:
      - backend_network
    depends_on:
      - postgres_primary
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "5433:5432"  

  backend:
    image: norohim/cp-planta-backend:latest
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres_primary
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=postgres
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "3000:3000"

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=fulano@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=abc123
    depends_on:
      - postgres_primary
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "80:80"  

  frontend:
    image: norohim/cp-planta-frontend:latest
    environment:
      - NODE_ENV=production
      - PORT=3001     # forces next.js to use port 3001
    networks:
      - frontend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "3001:3001"   

  runners:
    image: gitlab/gitlab-runner:latest
    environment:
      - CI_SERVER_URL=${CI_SERVER_URL}
      - RUNNER_TOKEN=${RUNNER_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/gitlab-runner/config:/etc/gitlab-runner
    networks:
      - runner_network
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "4G"
        reservations:
          cpus: "1"
          memory: "2G"
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure

networks:

  backend_network:
    driver: overlay
  frontend_network:
    driver: overlay
  runner_network:
    driver: overlay

volumes:
  primary_data:
    driver: local
  replica_data:
    driver: local
  
