version: "3.8"
services:
  # backend:
  #   image: norohim/cp-planta-backend:latest
  #   environment:
  #     - NODE_ENV=production
  #     - DB_HOST=database
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_NAME=postgres
  #   networks:
  #     - backend_network
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #   ports:
  #     - "3000:3000"

  # database:
  #   image: norohim/cp-planta-database:latest
  #   environment:
  #     - NODE_ENV=production
  #     - DB_HOST=database
  #     - DB_PORT=5432
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #     - DB_NAME=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=postgres
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   networks:
  #     - backend_network
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #     placement:
  #       constraints:
  #         - node.hostname == vm1
  #   ports:
  #     - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=fulano@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=abc123
    depends_on:
      - database
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "80:80"  

  frontend:
    image: norohim/cp-planta-frontend:latest
    environment:
      - NODE_ENV=production
      - PORT=3001     # forces next.js to use port 3001
    networks:
      - frontend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "3001:3001"   

  runners:
    image: gitlab/gitlab-runner:latest
    environment:
      - CI_SERVER_URL=${CI_SERVER_URL}
      - RUNNER_TOKEN=${RUNNER_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/gitlab-runner/config:/etc/gitlab-runner
    networks:
      - runner_network
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "2G"
        reservations:
          cpus: "0.5"
          memory: "1G"
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure

        
networks:
  # backend_network:
  #   driver: overlay
  # frontend_network:
  #   driver: overlay
  runner_network:
    driver: overlay

# volumes:
#   db_data:
#     driver: local
