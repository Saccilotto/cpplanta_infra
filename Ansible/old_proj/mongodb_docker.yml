---
- hosts: mongodb
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # Define the MongoDB user, password, and database
    mongodb_user: "mongodb"
    mongodb_password: "mongodb"
    mongodb_db: "mongodb"
    # Define the MongoDB exporter user, password, and port
    mongodb_exporter_user: "mongodb_exporter"
    mongodb_exporter_password: "mongodb_exporter"
    mongodb_port: 27017
    mongodb_exporter_port: 9216  
    mongodb_data_path: "/opt/mongodb"
  tasks:
    - name: Update apt cache and install dependencies
      apt:
        update_cache: yes
        name:
          - docker.io
          - docker-compose
          - python3-pip
        state: present

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create Docker network
      community.docker.docker_network:
        name: mongodb_network

    - name: Pull MongoDB image
      community.docker.docker_image:
        name: mongo
        source: pull

    - name: Pull Node Exporter image
      community.docker.docker_image:
        name: prom/node-exporter
        source: pull

    - name: Pull MongoDB Exporter image
      community.docker.docker_image:
        name: bitnami/mongodb-exporter
        source: pull

    - name: Run MongoDB container
      community.docker.docker_container:
        name: mongodb
        image: mongo 
        state: started
        restart_policy: always
        ports:
          - "{{ mongodb_port }}:{{ mongodb_port }}"
        env:
          MONGO_INITDB_ROOT_USERNAME: "{{ mongodb_user }}"
          MONGO_INITDB_ROOT_PASSWORD: "{{ mongodb_password }}"
          MONGO_INITDB_DATABASE: "{{ mongodb_db }}"
        volumes:
          - "{{ mongodb_data_path }}:/data/db"
        networks:
          - name: mongodb_network

    - name: Run Node Exporter container
      community.docker.docker_container:
        name: node_exporter
        image: prom/node-exporter
        state: started
        restart_policy: always
        ports:
          - "9100:9100"
        networks:
          - name: mongodb_network

    - name: Wait for MongoDB to be ready
      wait_for:
        port: "{{ mongodb_port }}"
        host: "{{ ansible_host }}"
        timeout: 20

    - name: Create MongoDB database, collection and insert document
      shell: |
        docker exec mongodb mongosh --eval '
        use {{ mongodb_db }};
        db.createCollection("{{ mongodb_db }}");
        db.new_collection.insert({ name: "Example" });
        '
      args:
        executable: /bin/bash

    - name: Verify database and collection creation
      shell: |
        docker exec mongodb mongosh --eval '
        use {{ mongodb_db }};
        printjson(db.getCollectionNames());
        printjson(db.new_collection.findOne({ name: "Example" }));
        '
      args:
        executable: /bin/bash

    - name: Create MongoDB user for exporter
      shell: |
        docker exec mongodb mongosh --eval '
        use admin;
        db.createUser({
          user: "{{ mongodb_exporter_user }}",
          pwd: "{{ mongodb_exporter_password }}",
          roles: [
            { role: "clusterMonitor", db: "admin" },
            { role: "read", db: "{{ mongodb_db }}" }
          ]
        });
        '
      args:
        executable: /bin/bash

    - name: Run MongoDB Exporter container
      community.docker.docker_container:
        name: mongodb_exporter
        image: bitnami/mongodb-exporter
        state: started
        restart_policy: always
        env:
          MONGODB_URI: "mongodb://{{ mongodb_user }}:{{ mongodb_password }}@mongodb:{{ mongodb_port }}/admin?ssl=false"
        ports:
          - "{{ mongodb_exporter_port }}:{{ mongodb_exporter_port }}"
        networks:
          - name: mongodb_network