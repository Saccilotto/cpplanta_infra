---
- name: Configurar o Docker Swarm Cluster
  hosts: all
  become: yes
  vars:
    stack_name: CP-Planta
  tasks:

  - name: Verificar se o Docker está instalado
    command: docker --version
    ignore_errors: yes
    register: docker_installed

  - name: Adicionar chave GPG do Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    when: docker_installed is failed
    become: yes

  - name: Adicionar repositório oficial do Docker para Ubuntu Server
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      state: present
    when: docker_installed is failed
    become: yes

  - name: Atualizar cache do APT
    apt:
      update_cache: yes
    when: docker_installed is failed
    become: yes

  - name: Instalar Docker no Ubuntu Server
    apt:
      name: docker-ce
      state: present
    when: docker_installed is failed
    become: yes

  - name: Iniciar e habilitar o Docker
    service:
      name: docker
      state: started
      enabled: yes
    when: docker_installed is failed
    become: yes

  - name: Verificar se o Docker Swarm já está ativo
    command: docker info
    register: docker_info
    ignore_errors: yes

  - name: Inicializar o Swarm no nó se ainda não estiver ativo
    shell: docker swarm init --advertise-addr {{ ansible_host }}
    when: "'Swarm: inactive' in docker_info.stdout"

  - name: Aguardar 5 segundos para garantir a inicialização completa do Swarm
    pause:
      seconds: 5
    when: "'Swarm: inactive' in docker_info.stdout"

  - name: Capturar o token do Swarm para adicionar outros nós
    shell: docker swarm join-token worker -q
    when: "'Swarm: active' in docker_info.stdout"
    register: worker_token
    delegate_to: "{{ groups['all'][0] }}"
    run_once: true

  - name: Exibir o token capturado para verificação
    debug:
      msg: "Token capturado: {{ worker_token.stdout }}"
    run_once: true

  - name: Adicionar nó ao Swarm (caso não seja o iniciador)
    shell: docker swarm join --token {{ worker_token.stdout }} {{ groups['all'][0] }}:2377
    when: "'Swarm: inactive' in docker_info.stdout"

  - name: Copiar o arquivo stack.yml para o Manager
    copy:
      src: ./stack.yml
      dest: /home/adminuser/stack.yml
    delegate_to: "{{ groups['all'][0] }}"
    run_once: true

  - name: Executar o deploy do stack no Manager
    shell: docker stack deploy -c /home/adminuser/stack.yml CP-Planta
    delegate_to: "{{ groups['all'][0] }}"
    run_once: true
    become: yes

  - name: Verificar o status do stack
    shell: docker stack ps CP-Planta
    delegate_to: "{{ groups['all'][0] }}"
    run_once: true
    become: yes